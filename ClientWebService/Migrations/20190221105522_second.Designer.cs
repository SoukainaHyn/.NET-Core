// <auto-generated />
using System;
using ClientWebService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClientWebService.Migrations
{
    [DbContext(typeof(ClientWSContext))]
    [Migration("20190221105522_second")]
    partial class second
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ClientWebService.Data.Models.Adresse", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClientId");

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<string>("CodePostal");

                    b.Property<DateTime>("DateCreation");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Pays");

                    b.Property<string>("Portable");

                    b.Property<string>("Rue");

                    b.Property<string>("Telephone")
                        .IsRequired();

                    b.Property<string>("Ville");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Adresses");
                });

            modelBuilder.Entity("ClientWebService.Data.Models.Client", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<DateTime>("DateCreation");

                    b.Property<string>("Nom")
                        .IsRequired();

                    b.Property<string>("Siret")
                        .IsRequired()
                        .HasMaxLength(18);

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("ClientWebService.Data.Models.Contact", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClientId");

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<DateTime>("DateCreation");

                    b.Property<string>("Fonction");

                    b.Property<string>("Nom")
                        .IsRequired();

                    b.Property<string>("Prenom")
                        .IsRequired();

                    b.Property<string>("Service");

                    b.HasKey("Id");

                    b.HasIndex("ClientId")
                        .IsUnique()
                        .HasFilter("[ClientId] IS NOT NULL");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("ClientWebService.Data.Models.Adresse", b =>
                {
                    b.HasOne("ClientWebService.Data.Models.Client", "Client")
                        .WithMany("Adresses")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("ClientWebService.Data.Models.Contact", b =>
                {
                    b.HasOne("ClientWebService.Data.Models.Client", "Client")
                        .WithOne("Contact")
                        .HasForeignKey("ClientWebService.Data.Models.Contact", "ClientId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
